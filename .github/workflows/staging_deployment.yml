name: Deploy to staging

on:
    push: 
        branches:
            - staging

jobs:
#   unit_testing:

#     name: Unit testing
#     runs-on: ubuntu-latest

#     environment: prod_env

#     env:
#       DATABRICKS_HOST: ${{secrets.DATABRICKS_HOST}}
#       DATABRICKS_CLIENT_ID: ${{secrets.DATABRICKS_CLIENT_ID}}
#       DATABRICKS_CLIENT_SECRET: ${{secrets.DATABRICKS_CLIENT_SECRET}}

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Setup Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: Install python dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run unit tests
#         run: python -m pytest tests

  deploy:
    name: Deploy bundle
    runs-on: ubuntu-latest
    environment: staging
    # Run the "unit_testing" job first.
    # needs:
    #   - unit_testing

    env:
      DATABRICKS_HOST: ${{secrets.DATABRICKS_HOST}}
      DATABRICKS_CLIENT_ID: ${{secrets.DATABRICKS_CLIENT_ID}}
      DATABRICKS_CLIENT_SECRET: ${{secrets.DATABRICKS_CLIENT_SECRET}}

    # Checkout code, setup databricks CLI and then, deploy the bundle using DABs
    steps:
      - uses: actions/checkout@v3
      - uses: databricks/setup-cli@main

      - run: databricks bundle deploy -t staging
